name: ShellCheck

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'scripts/**/*.sh'
      - '.github/workflows/shellcheck.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'scripts/**/*.sh'
      - '.github/workflows/shellcheck.yml'
  workflow_dispatch:

jobs:
  shellcheck:
    name: ShellCheck Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Find shell scripts
      id: find-scripts
      run: |
        echo "Found shell scripts:"
        find scripts -name "*.sh" -type f | tee shell_scripts.txt
        echo "script-count=$(find scripts -name "*.sh" -type f | wc -l)" >> $GITHUB_OUTPUT
        
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './scripts'
        format: gcc
        severity: error
        additional_files: '*.sh'
        ignore_paths: 'node_modules'
        ignore_names: ''
        disable_matcher: false
        
    - name: Run detailed ShellCheck with warnings
      run: |
        echo "Running detailed ShellCheck analysis..."
        exit_code=0
        
        while IFS= read -r script; do
          echo "Checking: $script"
          if ! shellcheck -f gcc -S warning "$script"; then
            exit_code=1
          fi
          echo "---"
        done < shell_scripts.txt
        
        if [ $exit_code -ne 0 ]; then
          echo "❌ ShellCheck found issues in one or more scripts"
          echo "Please fix the errors and warnings above"
          exit 1
        else
          echo "✅ All shell scripts passed ShellCheck validation"
        fi
        
    - name: Generate ShellCheck report
      if: always()
      run: |
        echo "# ShellCheck Report" > shellcheck_report.md
        echo "Date: $(date)" >> shellcheck_report.md
        echo "Scripts analyzed: $(cat shell_scripts.txt | wc -l)" >> shellcheck_report.md
        echo "" >> shellcheck_report.md
        echo "## Scripts checked:" >> shellcheck_report.md
        
        while IFS= read -r script; do
          echo "- $script" >> shellcheck_report.md
        done < shell_scripts.txt
        
        echo "" >> shellcheck_report.md
        echo "## ShellCheck Results:" >> shellcheck_report.md
        
        while IFS= read -r script; do
          echo "### $script" >> shellcheck_report.md
          if shellcheck -f gcc "$script" > /tmp/shellcheck_output 2>&1; then
            echo "✅ No issues found" >> shellcheck_report.md
          else
            echo "❌ Issues found:" >> shellcheck_report.md
            echo '```' >> shellcheck_report.md
            cat /tmp/shellcheck_output >> shellcheck_report.md
            echo '```' >> shellcheck_report.md
          fi
          echo "" >> shellcheck_report.md
        done < shell_scripts.txt
        
    - name: Upload ShellCheck report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: shellcheck-report
        path: shellcheck_report.md
        retention-days: 30
        
    - name: Comment on PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('shellcheck_report.md')) {
            const report = fs.readFileSync('shellcheck_report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ShellCheck Analysis Results\n\n${report}`
            });
          }
