name: 6. Monitor Pipeline Performance

on:
  workflow_dispatch:
    inputs:
      server_ip:
        description: 'IP address of the target server'
        required: true
      topic:
        description: 'Kafka topic to monitor'
        required: true
        default: 'quotes'
      check_duration:
        description: 'Duration to collect metrics (in seconds)'
        required: false
        default: '60'

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Deployment Repo
        uses: actions/checkout@v4

      - name: Configure SSH Key
        env:
          SSH_KEY: ${{ secrets.HETZNER_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_hetzner
          chmod 600 ~/.ssh/id_hetzner
          ssh-keyscan -H "${{ github.event.inputs.server_ip }}" >> ~/.ssh/known_hosts
        continue-on-error: false  # This step is critical, so don't continue if it fails

      - name: Copy Monitoring Scripts to Server
        run: |
          echo "Copying monitoring scripts to server..."
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "mkdir -p /tmp/monitor"
          
          # Copy all new monitoring scripts
          scp -i ~/.ssh/id_hetzner scripts/monitor/system_status.sh root@${{ github.event.inputs.server_ip }}:/tmp/monitor/
          scp -i ~/.ssh/id_hetzner scripts/monitor/kafka_infrastructure.sh root@${{ github.event.inputs.server_ip }}:/tmp/monitor/
          scp -i ~/.ssh/id_hetzner scripts/monitor/topic_analysis.sh root@${{ github.event.inputs.server_ip }}:/tmp/monitor/
          scp -i ~/.ssh/id_hetzner scripts/monitor/throughput_analysis.sh root@${{ github.event.inputs.server_ip }}:/tmp/monitor/
          scp -i ~/.ssh/id_hetzner scripts/monitor/provide_recommendations.sh root@${{ github.event.inputs.server_ip }}:/tmp/monitor/
          
          # Make all scripts executable
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "chmod +x /tmp/monitor/*.sh"
        continue-on-error: false  # This step is critical, so don't continue if it fails

      - name: "Step 1: System Status Overview"
        run: |
          echo "=== STEP 1: SYSTEM STATUS OVERVIEW ==="
          echo "Checking system resources (CPU, Memory, IO, Network)..."
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "bash /tmp/monitor/system_status.sh"
        continue-on-error: true

      - name: "Step 2: Kafka Infrastructure Status"
        run: |
          echo "=== STEP 2: KAFKA INFRASTRUCTURE STATUS ==="
          echo "Checking Kafka brokers, topics and general health..."
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "bash /tmp/monitor/kafka_infrastructure.sh"
        continue-on-error: true

      - name: "Step 3: Topic Analysis & Message Inspection"
        run: |
          echo "=== STEP 3: TOPIC ANALYSIS & MESSAGE INSPECTION ==="
          echo "Analyzing topic '${{ github.event.inputs.topic }}' - messages, timestamps, delays..."
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "bash /tmp/monitor/topic_analysis.sh ${{ github.event.inputs.topic }}"
        continue-on-error: true

      - name: "Step 4: Throughput & Traffic Analysis"
        run: |
          echo "=== STEP 4: THROUGHPUT & TRAFFIC ANALYSIS ==="
          echo "Calculating throughput and traffic metrics for ${{ github.event.inputs.check_duration }} seconds..."
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "bash /tmp/monitor/throughput_analysis.sh ${{ github.event.inputs.topic }} ${{ github.event.inputs.check_duration }}"
        continue-on-error: true

      - name: "Final: Summary & Recommendations"
        run: |
          echo "=== MONITORING SUMMARY & RECOMMENDATIONS ==="
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "bash /tmp/monitor/provide_recommendations.sh"
        continue-on-error: true

      - name: Cleanup SSH Configuration
        if: always()  # This step always runs, even if previous steps fail
        run: rm -rf ~/.ssh