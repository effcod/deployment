name: Build & Upload Zipapp Artifact

on:
  workflow_dispatch:
    inputs:
      artifact_tag:
        description: 'Tag name to build the artifact from (e.g., 0.0.3). This tag must exist in the trading repository.'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Trading Repository at Provided Tag
        uses: actions/checkout@v4
        with:
          # Replace 'trading-cz/trading' with your organization/repository name if different.
          repository: trading-cz/trading
          ref: ${{ github.event.inputs.artifact_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: trading

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Parse Tag and Prepare Build
        working-directory: trading
        run: |
          # The provided tag (which is used as the version) is stored in the input.
          VERSION="${{ github.event.inputs.artifact_tag }}"
          echo "Using artifact version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Zipapp Artifact
        working-directory: trading
        run: |
          # Remove any previous build folder and create a fresh build directory.
          rm -rf build && mkdir build

          # Install dependencies from requirements.txt into the build folder.
          pip install --upgrade --no-cache-dir -r requirements.txt --target build

          # Copy the __main__.py entry point.
          cp __main__.py build/

          # Copy the inner source folder.
          cp -r trading/ build/trading

          # Copy the data folder if it exists.
          if [ -d data ]; then
            cp -r data build/data
          fi

          # Build the zipapp. With __main__.py included, the zipapp
          # will use it as the entry point.
          python -m zipapp build -o trading-${VERSION}.pyz

          # List the produced file for review.
          ls -l

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name is now "trading-<version>" (no forbidden characters)
          name: "trading-${{ env.VERSION }}"
          # The artifact file is located under the trading folder.
          path: "trading/trading-${{ env.VERSION }}.pyz"
