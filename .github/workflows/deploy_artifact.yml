name: Deploy Python Application

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Artifact version (e.g., 0.0.3)'
        required: true
      server_ip:
        description: 'IP address of the target server'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Deployment Repo
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          # Artifact name was uploaded as "trading-<version>"
          name: trading-${{ github.event.inputs.version }}
          path: artifact

      - name: Configure SSH Key
        env:
          SSH_KEY: ${{ secrets.HETZNER_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_hetzner
          chmod 600 ~/.ssh/id_hetzner
          # Add the target server to known_hosts to prevent interactive prompts.
          ssh-keyscan -H "${{ github.event.inputs.server_ip }}" >> ~/.ssh/known_hosts

      - name: Copy Artifact and Install Script to Remote
        run: |
          scp -i ~/.ssh/id_hetzner artifact/trading-${{ github.event.inputs.version }} root@${{ github.event.inputs.server_ip }}:/tmp/
          scp -i ~/.ssh/id_hetzner scripts/python/install_artifact.sh root@${{ github.event.inputs.server_ip }}:/tmp/

      - name: Execute Deployment Script on Remote Host
        run: |
          ssh -i ~/.ssh/id_hetzner root@${{ github.event.inputs.server_ip }} "chmod +x /tmp/install_artifact.sh && /tmp/install_artifact.sh ${{ github.event.inputs.version }}"

      - name: Cleanup SSH Configuration
        if: always()
        run: |
          rm -rf ~/.ssh
